extends layout 

block content 
    h1 Match between
        p#teamAName #{teamA.name}
        p#teamBName #{teamB.name}
    
    p Elapsed Time: 
    p#elapsedTime 0m 0s

    h2 Current Score: 
    p#score  #{match.result}

    h2 Match history: 
    p#history
    
    p Status: 
    p#status #{match.status}

    if match.status !== 'FINISHED'
        button#incrementTeamA +1 #{teamA.name}
        button#decrementTeamA -1 #{teamA.name}
        button#incrementTeamB +1 #{teamB.name}
        button#decrementTeamB -1 #{teamB.name}
        button#swapTeams Swap Teams 
        button#endSet End Set 
        button#endMatch End Match 

    if match.status === 'FINISHED'
        p The match is finished.

    button#showMatchHistory View Match History 
    button#closeView Close View and Return to Home    

    script(src="/socket.io/socket.io.js")
    script(src="https://code.jquery.com/jquery-3.6.0.min.js")

    script.
        var socket = io();
        var matchStartDate = new Date("#{match.date}");
        var teamAName = "#{teamA.name}";
        var teamBName = "#{teamB.name}";
        var match = "#{match.resultdetailed.results}";
        console.log(match);
        if (match) {
            
            match.split(',').forEach(function(result, index) {
                $('#history').append(`<p>Set ${index + 1}: ${result}</p>`);
            });
        }

        function updateElapsedTime() {
            var now = new Date();
            var elapsed = now - matchStartDate;
            var minutes = Math.floor(elapsed / (1000 * 60));
            var seconds = Math.floor((elapsed % (1000 * 60)) / 1000);
            $('#elapsedTime').text(
                `${minutes}m ${seconds}s`
            );
        }

        setInterval(updateElapsedTime, 1000);

        function updateMatchInfo(score){
            $('#teamAname').text(teamAName);
            $('#teamBname').text(teamBName);
            $('#score').text(score);
        }

        socket.on('scoreUpdate', function(data) {
            if (data.match.id == #{match.id}) {
                teamAName = data.teamA.name;
                teamBName = data.teamB.name;
                matchStartDate = new Date(data.match.date);
                $('#status').text(data.match.status);
                $('#teamAName').text(teamAName);
                $('#teamBName').text(teamBName);
                $('#score').text(data.match.result);

                if (data.match.resultdetailed && Array.isArray(data.match.resultdetailed.results)) {

                    $('#history').empty();
                    
                    data.match.resultdetailed.results.forEach(function(result, index) {
                        $('#history').append(`<p>Set ${index + 1}: ${result}</p>`);
                    });
                } else {
                    console.error("Invalid resultDetailed format:", data.match.resultdetailed);
                }

                console.log(data);
            }
        });


        socket.on('finished', function(data){
            if(data.id == #{match.id}){
                location.reload();
            }
        });

        function updateScore(team, increment){
            var scores = $('#score').text().split(':').map(Number);
            if(team === 'teamA'){
                scores[0] += increment;
            }else{
                scores[1] += increment;
            }

            scores[0] = Math.max(scores[0], 0);
            scores[1] = Math.max(scores[1], 0);
            var newScore = `${scores[0]}:${scores[1]}`;
            $.post(`/match/${#{match.id}}/update-score`, {setScore: newScore}, function(response){
                if(response.success){
                    console.log("Score updated");
                }
            });
        }

        $('#incrementTeamA').click(function() {
            updateScore('teamA', 1);
        });

        $('#decrementTeamA').click(function() {
            updateScore('teamA', -1);
        });

        $('#incrementTeamB').click(function() {
            updateScore('teamB', 1);
        });

        $('#decrementTeamB').click(function() {
            updateScore('teamB', -1);
        });            

        $('#swapTeams').click(function(){
            $.post(`/match/${#{match.id}}/swap-teams`, function(response){
                if(response.success){
                    console.log("Swapped");
                }
            });
        });

        $('#endSet').click(function() {
            $.post(`/match/${#{match.id}}/add-score-to-details`, function(response) {
                if (response.success) {
                    console.log("Set ended");
                }   
            });
        });

        $('#endMatch').click(function(){
            $.post(`/match/${#{match.id}}/end-match`, function(response) {
                if (response.success) {
                    console.log("Match ended");
                }   
            });
        });
        

        $('#closeView').click(function(){
            window.location.href = "/";
        });

        
    